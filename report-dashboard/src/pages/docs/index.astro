---
import AdminLayout from "../../layouts/AdminLayout.astro";

const baseUrl = import.meta.env.BASE_URL || "/flow-test";
const withBase = (path: string) => `${baseUrl}/${path.replace(/^\//, "")}`;

const markdownModules = import.meta.glob("../../content/guides/**/*.md", { eager: true });

interface GuideEntry {
  slug: string;
  title: string;
  description?: string;
}

function formatTitle(input: string) {
  return input
    .split(/[\/-]/)
    .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, " "))
    .join(" / ")
    .replace(/_/g, " ");
}

const guides: GuideEntry[] = Object.entries(markdownModules)
  .filter(([path]) => path.endsWith(".md"))
  .map(([path, mod]: any) => {
    const relative = path.split("/guides/")[1].replace(/\.md$/, "");
    const slug = relative;
    const frontmatter = mod.frontmatter ?? {};
    const title = frontmatter.title || formatTitle(relative);
    const description = frontmatter.description;
    return { slug, title, description };
  })
  .sort((a, b) => a.title.localeCompare(b.title));
---

<AdminLayout title="Documentation">
  <section class="max-w-4xl mx-auto">
    <header class="mb-8">
      <h1 class="text-3xl font-bold text-base-content">Guides &amp; Documentation</h1>
      <p class="text-base-content/70 mt-2">
        Content is automatically synced from the repository <code>guides/</code> folder whenever the dashboard builds.
      </p>
    </header>

    <div class="grid gap-4">
      {guides.map((guide) => (
        <a href={withBase(`docs/${guide.slug}`)} class="card bg-base-100 shadow hover:shadow-lg transition-all">
          <div class="card-body">
            <h2 class="card-title text-lg">{guide.title}</h2>
            {guide.description && <p class="text-base-content/70">{guide.description}</p>}
            {!guide.description && <p class="text-base-content/60 text-sm">{guide.slug}</p>}
          </div>
        </a>
      ))}
    </div>
  </section>
</AdminLayout>
