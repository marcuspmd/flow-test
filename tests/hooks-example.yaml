suite_name: E-commerce API - Complete Flow with Hooks
node_id: ecommerce-hooks-demo
base_url: https://dummyjson.com
variables:
  user_tier: premium
  discount_rate: 0.15
  # Array para iteração - definido aqui para evitar erro de parsing
  products_to_add:
    - {id: 1, qty: 2}
    - {id: 5, qty: 1}
    - {id: 10, qty: 3}
exports:
  - auth_token
  - cart_id
  # - order_id  # Comentado: endpoint não existe na DummyJSON
metadata:
  priority: high
  tags:
    - hooks
    - demo
    - ecommerce
  description: Demonstrates all lifecycle hook types with practical examples
steps:
  - name: User login with request hooks
    step_id: login
    hooks_pre_request:
      - compute:
          timestamp: "$Date.now()"
          request_id: "$crypto.randomUUID()"
          user_agent: Flow-Test-Engine/2.0
      - validate:
          - expression: user_tier
            message: User tier must be defined
            severity: error
          - expression: discount_rate >= 0 && discount_rate <= 1
            message: Discount rate must be between 0 and 1
            severity: warning
      - log:
          level: info
          message: Attempting login at {{timestamp}} with request {{request_id}}
          metadata:
            user_tier: '{{user_tier}}'
            client: flow-test
    request:
      method: POST
      url: /auth/login
      headers:
        X-Request-ID: '{{request_id}}'
        X-Timestamp: '{{timestamp}}'
        User-Agent: '{{user_agent}}'
      body:
        username: emilys
        password: emilyspass
        expiresInMins: 30
    hooks_post_request:
      - compute:
          response_time: "$Date.now() - timestamp"
          expires_at: "$Date.now() + (30 * 60 * 1000)"
          token_length: "$response.body.accessToken.length"
      - metric:
          name: api_login_duration_ms
          value: '{{response_time}}'
          tags:
            endpoint: /auth/login
            status: success
            user_tier: '{{user_tier}}'
      - validate:
          - expression: response_time < 2000
            message: Login took {{response_time}}ms - Performance acceptable
            severity: info
          - expression: response_time < 5000
            message: Login took {{response_time}}ms - Performance degraded!
            severity: warning
      - log:
          level: info
          message: Login successful in {{response_time}}ms, token expires at {{expires_at}}
          metadata:
            token_length: '{{token_length}}'
            user_id: $response.body.id
    assert:
      status_code: 200
      body:
        accessToken:
          exists: true
          type: string
        id:
          exists: true
          type: number
    capture:
      auth_token: body.accessToken
      user_id: body.id
      user_email: body.email
  - name: Select product with input hooks
    step_id: select-product
    hooks_pre_input:
      - compute:
          default_product_id: "$Math.floor(Math.random() * 100) + 1"
          input_timestamp: "$Date.now()"
      - validate:
          - expression: auth_token
            message: Must be authenticated before selecting products
            severity: error
      - log:
          level: info
          message: 'Requesting product selection (default: {{default_product_id}})'
    input:
      prompt: Enter product ID to add to cart
      variable: selected_product_id
      type: number
      default: '{{default_product_id}}'
      required: true
      validation:
        min: 1
        max: 100
      ci_default: 1
    hooks_post_input:
      - compute:
          sanitized_product_id: "$Math.max(1, Math.min(100, parseInt(selected_product_id) || 1))"
          input_duration_ms: "$Date.now() - input_timestamp"
      - metric:
          name: user_input_duration_ms
          value: '{{input_duration_ms}}'
          tags:
            input_type: product_selection
            has_default: 'true'
      - log:
          level: debug
          message: 'Product ID selected: {{sanitized_product_id}} (input took {{input_duration_ms}}ms)'

  # Step comentado: iterate com array literal causa erro no ExecutionService
  # - name: Add product {{product.id}} to cart

  # Step alternativo: Buscar cart existente (DummyJSON não persiste carts via POST /carts/add)
  - name: Get existing cart with hooks
    step_id: verify-cart
    hooks_pre_request:
      - log:
          level: info
          message: 'Fetching cart 1'
    request:
      method: GET
      url: /carts/1
    hooks_post_request:
      - compute:
          verification_time: "$Date.now()"
          fetched_products_count: "$response.body.totalProducts"
      - metric:
          name: cart_verified
          value: 1
          tags:
            cart_id: "1"
            products_count: "{{fetched_products_count}}"
      - log:
          level: info
          message: 'Cart verified: {{fetched_products_count}} products, total: ${{response.body.total}}'
    assert:
      status_code: 200
      body:
        id:
          exists: true
        products:
          type: array
        total:
          type: number
    capture:
      verified_cart_id: body.id
      verified_total: body.total
      verified_products_count: body.totalProducts
