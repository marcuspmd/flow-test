node_id: "faker-advanced-integration"
suite_name: "Advanced Faker.js Integration Test Suite"
description: "Comprehensive coverage of Faker.js capabilities for realistic test data generation"
base_url: "{{httpbin_url}}"

metadata:
  priority: "medium"
  tags: ["faker", "data-generation", "realistic-data", "comprehensive"]
  estimated_duration_ms: 6000

variables:
  test_seed: 12345

steps:
  - name: "Test person data generation"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        person:
          full_name: "{{$faker.person.fullName}}"
          first_name: "{{$faker.person.firstName}}"
          last_name: "{{$faker.person.lastName}}"
          email: "{{$faker.internet.email}}"
          phone: "{{$faker.phone.number}}"
          birth_date: "{{$faker.date.birthdate}}"
          gender: "{{$faker.person.gender}}"
          job_title: "{{$faker.person.jobTitle}}"
          bio: "{{$faker.lorem.sentence}}"
    assert:
      status_code: 200
      body:
        json:
          person:
            email:
              contains: "@"
            phone:
              exists: true
    capture:
      generated_email: "body.json.person.email"
      generated_name: "body.json.person.full_name"

  - name: "Test address and location data"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        address:
          street: "{{$faker.location.streetAddress}}"
          city: "{{$faker.location.city}}"
          state: "{{$faker.location.state}}"
          country: "{{$faker.location.country}}"
          zip_code: "{{$faker.location.zipCode}}"
          latitude: "{{$faker.location.latitude}}"
          longitude: "{{$faker.location.longitude}}"
          timezone: "EST"
    assert:
      status_code: 200
      body:
        json:
          address:
            country:
              exists: true
    capture:
      generated_city: "body.json.address.city"

  - name: "Test business and finance data"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        business:
          company: "{{$faker.company.name}}"
          department: "{{$faker.commerce.department}}"
          product: "{{$faker.commerce.productName}}"
          price: "{{$faker.commerce.price}}"
          currency: "{{$faker.finance.currencyCode}}"
          account: "{{$faker.finance.accountNumber}}"
          amount: "{{$faker.finance.amount}}"
          transaction_type: "transfer"
          credit_card: "{{$faker.finance.creditCardNumber}}"
          iban: "GB82 WEST 1234 5698 7654 32"
    assert:
      status_code: 200
      body:
        json:
          business:
            price:
              type: string
            currency:
              exists: true
    capture:
      generated_company: "body.json.business.company"

  - name: "Test internet and technology data"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        tech:
          domain: "{{$faker.internet.domainName}}"
          url: "{{$faker.internet.url}}"
          ip_v4: "{{$faker.internet.ip}}"
          ip_v6: "{{$faker.internet.ipv4}}"
          mac_address: "{{$faker.internet.mac}}"
          user_agent: "{{$faker.internet.userAgent}}"
          username: "{{$faker.internet.userName}}"
          password: "{{$faker.string.alphanumeric}}"
          emoji: "ðŸ˜€"
          color: "#FF0000"
    assert:
      status_code: 200
      body:
        data:
          contains: "tech"

  - name: "Test date and time variations"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        dates:
          past_date: "{{$faker.date.past}}"
          future_date: "{{$faker.date.future}}"
          recent_date: "{{$faker.date.recent}}"
          soon_date: "{{$faker.date.soon}}"
          weekday: "Monday"
          month: "January"
          time_zone: "UTC"
    assert:
      status_code: 200
      body:
        json:
          dates:
            weekday:
              exists: true

  - name: "Test arrays and complex selections"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        selections:
          random_word: "{{$faker.lorem.word}}"
          random_words: "{{$faker.lorem.words}}"
          paragraph: "{{$faker.lorem.paragraph}}"
          array_element: "{{$faker.helpers.arrayElement(['red', 'green', 'blue', 'yellow'])}}"
          random_number: "{{$faker.number.int}}"
          float_number: "{{$faker.number.float}}"
          boolean_value: "{{$faker.datatype.boolean}}"
          uuid: "{{$faker.string.uuid}}"
          hex_color: "#FF0000"
    assert:
      status_code: 200
      body:
        data:
          contains: "selections"

  - name: "Test locale-specific generation"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        localized:
          # Assuming faker supports locale switching
          name_pt: "{{$faker.person.fullName}}"
          address_local: "{{$faker.location.city}}"
          phone_local: "{{$faker.phone.number}}"
    assert:
      status_code: 200
    capture:
      locale_name: "body.json.localized.name_pt"

exports:
  - generated_email
  - generated_name
  - generated_city
  - generated_company
  - locale_name