node_id: "javascript-expressions"
suite_name: "JavaScript Expressions Integration Test"
description: "Tests JavaScript expressions for dynamic data generation and calculations"
base_url: "{{httpbin_url}}"

metadata:
  priority: "high"
  tags: ["javascript", "expressions", "dynamic", "calculations"]
  estimated_duration_ms: 4000

variables:
  base_number: 10
  multiplier: 5

steps:
  - name: "Test basic JavaScript arithmetic without variables"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        calculated_value: "{{$js:10 * 5}}"
        timestamp: "{{$js:Date.now()}}"
        random_between: "{{$js:Math.floor(Math.random() * 100) + 1}}"
    assert:
      status_code: 200
      body:
        json:
          calculated_value:
            equals: 50
          timestamp:
            type: number
          random_between:
            type: number
            greater_than: 0
            less_than_or_equal: 100
    capture:
      js_calculated: "body.json.calculated_value"
      js_timestamp: "body.json.timestamp"

  - name: "Test JavaScript string manipulation"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        uppercase_suite: "{{$js:'javascript-expressions'.toUpperCase()}}"
        reversed_name: "{{$js:'FlowTest'.split('').reverse().join('')}}"
        formatted_date: "{{$js:new Date().toISOString().split('T')[0]}}"
    assert:
      status_code: 200
      body:
        json:
          uppercase_suite:
            equals: "JAVASCRIPT-EXPRESSIONS"
          reversed_name:
            equals: "tseTwolF"

  - name: "Test JavaScript with captured variables"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        double_calculated: "{{$js:50 * 2}}"
        time_diff_positive: "{{$js:Date.now()}}"
        complex_calc: "{{$js:50 > 40 ? 'high' : 'low'}}"
    assert:
      status_code: 200
      body:
        json:
          double_calculated:
            equals: 100
          complex_calc:
            equals: "high"

  - name: "Test JavaScript arrays and objects"
    request:
      method: "POST"
      url: "/post"
      headers:
        Content-Type: "application/json"
      body:
        array_sum: "{{$js:[1,2,3,4,5].reduce((a,b) => a+b, 0)}}"
        object_keys: "{{$js:Object.keys({a:1, b:2, c:3}).length}}"
        conditional_value: "{{$js:10 > 5 ? 'greater' : 'less'}}"
    assert:
      status_code: 200
      body:
        json:
          array_sum:
            equals: 15
          object_keys:
            equals: 3
          conditional_value:
            equals: "greater"

exports:
  - js_calculated
  - js_timestamp