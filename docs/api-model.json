{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.13",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "flow-test-engine!",
  "docComment": "",
  "name": "flow-test-engine",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "flow-test-engine!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!AggregatedResult:interface",
          "docComment": "/**\n * Resultado agregado de execução\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AggregatedResult "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "AggregatedResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#end_time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end_time: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#failed_tests:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "failed_tests: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "failed_tests",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#global_variables_final_state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "global_variables_final_state: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "global_variables_final_state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#performance_summary:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "performance_summary?: "
                },
                {
                  "kind": "Reference",
                  "text": "PerformanceSummary",
                  "canonicalReference": "flow-test-engine!PerformanceSummary:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "performance_summary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#project_name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "project_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "project_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#skipped_tests:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skipped_tests: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "skipped_tests",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#start_time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start_time: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#success_rate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "success_rate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "success_rate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#successful_tests:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "successful_tests: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "successful_tests",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#suites_results:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suites_results: "
                },
                {
                  "kind": "Reference",
                  "text": "SuiteExecutionResult",
                  "canonicalReference": "flow-test-engine!SuiteExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suites_results",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#total_duration_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "total_duration_ms: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "total_duration_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AggregatedResult#total_tests:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "total_tests: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "total_tests",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ArrayIterationConfig:interface",
          "docComment": "/**\n * Configuration for array iteration in test steps\n *\n * @example\n * ```yaml\n * iterate:\n *   over: \"{{test_cases}}\"\n *   as: \"item\"\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArrayIterationConfig "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "ArrayIterationConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ArrayIterationConfig#as:member",
              "docComment": "/**\n * Variable name to use for the current item in each iteration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "as: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "as",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ArrayIterationConfig#over:member",
              "docComment": "/**\n * JMESPath expression or variable name pointing to the array to iterate over\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "over: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "over",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!AssertionChecks:interface",
          "docComment": "/**\n * Regras de validação estendidas para um campo específico\n *\n * Versão aprimorada das regras de assertion incluindo validações de tipo, existência, comprimento e outras verificações avançadas.\n *\n * @example\n * ```yaml\n * assert:\n *   body:\n *     user_id:\n *       type: number\n *       greater_than: 0\n *     email:\n *       exists: true\n *       regex: \"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\"\n *     items:\n *       length:\n *         greater_than: 0\n *         less_than: 100\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AssertionChecks "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "AssertionChecks",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#contains:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contains?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contains",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#equals:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "equals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#exists:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exists?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exists",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#greater_than:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greater_than?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "greater_than",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        equals?: number;\n        greater_than?: number;\n        less_than?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#less_than:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "less_than?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "less_than",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#not_equals:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "not_equals?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "not_equals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#regex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "regex?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "regex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionChecks#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Content",
                  "text": "\"string\" | \"number\" | \"boolean\" | \"object\" | \"array\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!AssertionResult:interface",
          "docComment": "/**\n * Resultado de uma assertion\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AssertionResult "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "AssertionResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionResult#actual:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actual: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actual",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionResult#expected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expected: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "expected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionResult#field:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "field: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "field",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionResult#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!AssertionResult#passed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "passed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "passed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!Assertions:interface",
          "docComment": "/**\n * Conjunto completo de validações para uma resposta HTTP\n *\n * Define todas as validações que podem ser aplicadas a uma resposta, incluindo assertions customizadas e validações de tempo de resposta com limites superior e inferior.\n *\n * @example\n * ```yaml\n * assert:\n *   status_code: 200\n *   body:\n *     success:\n *       equals: true\n *     data:\n *       type: object\n *       exists: true\n *   headers:\n *     content-type:\n *       contains: \"application/json\"\n *   response_time_ms:\n *     less_than: 2000\n *     greater_than: 10\n *   custom:\n *     - name: \"Valid user ID format\"\n *       condition: \"body.user.id && type(body.user.id) == 'number'\"\n *       message: \"User ID must be a number\"\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Assertions "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "Assertions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!Assertions#body:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "body?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "AssertionChecks",
                  "canonicalReference": "flow-test-engine!AssertionChecks:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!Assertions#custom:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "custom?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        name: string;\n        condition: string;\n        message?: string;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "custom",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!Assertions#headers:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "AssertionChecks",
                  "canonicalReference": "flow-test-engine!AssertionChecks:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!Assertions#response_time_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "response_time_ms?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        less_than?: number;\n        greater_than?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "response_time_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!Assertions#status_code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status_code?: "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "AssertionChecks",
                  "canonicalReference": "flow-test-engine!AssertionChecks:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "status_code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!AssertionService:class",
          "docComment": "/**\n * Service responsible for validating assertions in HTTP responses\n *\n * This service processes and validates all assertions defined in tests, including status code, headers, body and response time validations. Supports flat syntax (body.status) and structured syntax (body: {status}).\n *\n * @example\n * ```typescript\n * const assertionService = new AssertionService();\n * const results = assertionService.validateAssertions({\n *   status_code: 200,\n *   'body.message': { equals: 'success' }\n * }, executionResult);\n *\n * results.forEach(result => {\n *   console.log(`${result.field}: ${result.passed ? 'PASS' : 'FAIL'}`);\n * });\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AssertionService "
            }
          ],
          "fileUrlPath": "src/services/assertion.service.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AssertionService",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!AssertionService#validateAssertions:member(1)",
              "docComment": "/**\n * Validates all assertions of an HTTP response\n *\n * Main method that processes all configured assertions and returns an array with the results of each validation.\n *\n * @param assertions - Object with assertions to be validated\n *\n * @param result - HTTP execution result containing response\n *\n * @returns Array of validation results\n *\n * @example\n * ```typescript\n * const results = assertionService.validateAssertions({\n *   status_code: 200,\n *   'body.data.id': { not_null: true },\n *   'headers.content-type': { contains: 'application/json' }\n * }, executionResult);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validateAssertions(assertions: "
                },
                {
                  "kind": "Reference",
                  "text": "Assertions",
                  "canonicalReference": "flow-test-engine!Assertions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", result: "
                },
                {
                  "kind": "Reference",
                  "text": "StepExecutionResult",
                  "canonicalReference": "flow-test-engine!StepExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AssertionResult",
                  "canonicalReference": "flow-test-engine!AssertionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "assertions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "validateAssertions"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!CacheConfig:interface",
          "docComment": "/**\n * Configuração de cache\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CacheConfig "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "CacheConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!CacheConfig#enabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "enabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!CacheConfig#response_cache:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "response_cache?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        enabled: boolean;\n        ttl_ms: number;\n        key_strategy: \"url\" | \"url_and_headers\" | \"custom\";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "response_cache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!CacheConfig#variable_interpolation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variable_interpolation: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "variable_interpolation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!CaptureService:class",
          "docComment": "/**\n * Service responsible for capturing variables from HTTP responses\n *\n * Uses JMESPath expressions to extract specific values from HTTP responses and store them as variables for use in subsequent steps.\n *\n * @example\n * ```typescript\n * const captureService = new CaptureService();\n *\n * const captured = captureService.captureVariables({\n *   user_id: 'body.data.user.id',\n *   token: 'body.access_token',\n *   status: 'status_code'\n * }, executionResult);\n *\n * console.log(captured.user_id); // Value extracted from body.data.user.id\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CaptureService "
            }
          ],
          "fileUrlPath": "src/services/capture.service.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CaptureService",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!CaptureService#captureVariables:member(1)",
              "docComment": "/**\n * Captures variables from HTTP response using JMESPath expressions\n *\n * Processes a map of captures where the key is the variable name to be created and the value is the JMESPath expression to extract the data.\n *\n * @param captureConfig - Map of variable_name -> jmespath_expression\n *\n * @param result - HTTP execution result containing the response\n *\n * @param variableContext - Current variable context for JavaScript expressions\n *\n * @returns Object with captured variables\n *\n * @example\n * ```typescript\n * const captured = captureService.captureVariables({\n *   user_id: 'body.user.id',\n *   auth_token: 'body.token',\n *   response_time: 'duration_ms'\n * }, executionResult, currentVariables);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "captureVariables(captureConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ", result: "
                },
                {
                  "kind": "Reference",
                  "text": "StepExecutionResult",
                  "canonicalReference": "flow-test-engine!StepExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ", variableContext?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "captureConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "variableContext",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "captureVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!CaptureService#listAvailablePaths:member(1)",
              "docComment": "/**\n * Lists all available paths in an object for debugging.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listAvailablePaths(obj: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", maxDepth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "obj",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "prefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "maxDepth",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "listAvailablePaths"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!CaptureService#suggestCapturePaths:member(1)",
              "docComment": "/**\n * Suggests possible JMESPath based on response content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suggestCapturePaths(result: "
                },
                {
                  "kind": "Reference",
                  "text": "StepExecutionResult",
                  "canonicalReference": "flow-test-engine!StepExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "suggestCapturePaths"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!CaptureService#validateCapturePaths:member(1)",
              "docComment": "/**\n * Validates if a set of JMESPath are valid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validateCapturePaths(capturePaths: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "capturePaths",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "validateCapturePaths"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ConditionalScenario:interface",
          "docComment": "/**\n * Conditional scenarios for happy/sad path testing\n *\n * @example\n * ```typescript\n * const scenario: ConditionalScenario = {\n *   name: \"Check user role\",\n *   condition: \"body.user.role == 'admin'\",\n *   then: {\n *     assert: { status_code: 200 },\n *     capture: { admin_id: \"body.user.id\" }\n *   },\n *   else: {\n *     assert: { status_code: 403 },\n *     variables: { is_admin: false }\n *   }\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConditionalScenario "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "ConditionalScenario",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ConditionalScenario#condition:member",
              "docComment": "/**\n * JMESPath expression to evaluate condition\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "condition: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "condition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ConditionalScenario#else:member",
              "docComment": "/**\n * Actions to execute if condition is false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "else?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        assert?: "
                },
                {
                  "kind": "Reference",
                  "text": "Assertions",
                  "canonicalReference": "flow-test-engine!Assertions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capture?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>;\n        variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "else",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ConditionalScenario#name:member",
              "docComment": "/**\n * Optional name for the scenario\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ConditionalScenario#then:member",
              "docComment": "/**\n * Actions to execute if condition is true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "then?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        assert?: "
                },
                {
                  "kind": "Reference",
                  "text": "Assertions",
                  "canonicalReference": "flow-test-engine!Assertions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capture?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>;\n        variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "then",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!ConfigManager:class",
          "docComment": "/**\n * Gerenciador de configuração do Flow Test Engine\n *\n * Responsável por carregar, validar e gerenciar todas as configurações do engine, incluindo variáveis globais, configurações de ambiente e opções de execução. Suporta sobrescrita via parâmetros de runtime.\n *\n * @example\n * ```typescript\n * const configManager = new ConfigManager({\n *   config_file: './flow-test.config.yml',\n *   environment: 'staging',\n *   verbosity: 'verbose'\n * });\n *\n * const config = configManager.getConfig();\n * const globalVars = configManager.getGlobalVariables();\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConfigManager "
            }
          ],
          "fileUrlPath": "src/core/config.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ConfigManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!ConfigManager:constructor(1)",
              "docComment": "/**\n * Construtor do ConfigManager\n *\n * Carrega configuração de arquivo e aplica sobrescritas das opções de execução.\n *\n * @param options - Opções de execução que podem sobrescrever configurações do arquivo\n *\n * @example\n * ```typescript\n * // Com arquivo específico\n * const manager = new ConfigManager({ config_file: './custom.yml' });\n *\n * // Com sobrescritas\n * const manager = new ConfigManager({\n *   test_directory: './tests',\n *   environment: 'production'\n * });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "EngineExecutionOptions",
                  "canonicalReference": "flow-test-engine!EngineExecutionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ConfigManager#getConfig:member(1)",
              "docComment": "/**\n * Obtém a configuração completa processada\n *\n * Retorna a configuração final após aplicar todas as sobrescritas e resoluções de variáveis de ambiente.\n *\n * @returns Configuração completa do engine\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConfig(): "
                },
                {
                  "kind": "Reference",
                  "text": "EngineConfig",
                  "canonicalReference": "flow-test-engine!EngineConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ConfigManager#getGlobalVariables:member(1)",
              "docComment": "/**\n * Obtém variáveis globais combinadas de configuração e ambiente\n *\n * Combina variáveis definidas no arquivo de configuração com variáveis específicas do ambiente ativo, dando precedência às variáveis de ambiente.\n *\n * @returns Objeto com todas as variáveis globais disponíveis\n *\n * @example\n * ```typescript\n * // Se config tem: { api_url: 'http://localhost' }\n * // E ambiente 'prod' tem: { api_url: 'https://api.prod.com' }\n * // O resultado será: { api_url: 'https://api.prod.com' }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGlobalVariables(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getGlobalVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ConfigManager#getRuntimeFilters:member(1)",
              "docComment": "/**\n * Obtém filtros de runtime aplicados\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRuntimeFilters(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRuntimeFilters"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ConfigManager#reload:member(1)",
              "docComment": "/**\n * Recarrega a configuração do arquivo\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reload(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reload"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ConfigManager#saveDebugConfig:member(1)",
              "docComment": "/**\n * Salva a configuração atual (útil para debugging)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saveDebugConfig(outputPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "outputPath",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "saveDebugConfig"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "flow-test-engine!createEngine:function(1)",
          "docComment": "/**\n * Função de conveniência para criação rápida do engine\n *\n * Cria uma instância do FlowTestEngine com configuração mínima, ideal para uso em scripts ou integração simples.\n *\n * @param configPath - Caminho opcional para arquivo de configuração\n *\n * @returns Nova instância do FlowTestEngine configurada\n *\n * @example\n * ```typescript\n * const engine = createEngine('./my-config.yml');\n * const result = await engine.run();\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createEngine(configPath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configPath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "createEngine"
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!DependencyResult:interface",
          "docComment": "/**\n * Result of dependency execution\n *\n * @example\n * ```typescript\n * const result: DependencyResult = {\n *   flowPath: \"./auth/setup-auth.yaml\",\n *   suiteName: \"Authentication Setup\",\n *   success: true,\n *   executionTime: 1250,\n *   exportedVariables: {\n *     auth_token: \"abc123\",\n *     user_id: \"user_456\"\n *   },\n *   cached: false\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DependencyResult "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "DependencyResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#cached:member",
              "docComment": "/**\n * Whether the result was retrieved from cache\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cached: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cached",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#error:member",
              "docComment": "/**\n * Error message if execution failed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#executionTime:member",
              "docComment": "/**\n * Execution time in milliseconds\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executionTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "executionTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#exportedVariables:member",
              "docComment": "/**\n * Variables exported by the dependency\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exportedVariables: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "exportedVariables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#flowPath:member",
              "docComment": "/**\n * Path to the executed dependency flow\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flowPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "flowPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#nodeId:member",
              "docComment": "/**\n * Node ID of the executed dependency\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodeId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nodeId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#success:member",
              "docComment": "/**\n * Whether the dependency executed successfully\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "success: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "success",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DependencyResult#suiteName:member",
              "docComment": "/**\n * Name of the executed suite\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suiteName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suiteName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!DiscoveredTest:interface",
          "docComment": "/**\n * Teste descoberto com metadados\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DiscoveredTest "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "DiscoveredTest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#dependencies:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dependencies?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dependencies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#depends:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depends?: "
                },
                {
                  "kind": "Reference",
                  "text": "FlowDependency",
                  "canonicalReference": "flow-test-engine!FlowDependency:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "depends",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#estimated_duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "estimated_duration?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "estimated_duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#exports:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exports?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exports",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#file_path:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "file_path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "file_path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#node_id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "node_id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "node_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#priority:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveredTest#suite_name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suite_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suite_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!DiscoveryConfig:interface",
          "docComment": "/**\n * Configuração de descoberta de testes\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DiscoveryConfig "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "DiscoveryConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveryConfig#exclude:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exclude?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exclude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveryConfig#patterns:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "patterns: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "patterns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!DiscoveryConfig#recursive:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recursive?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "recursive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!EngineConfig:interface",
          "docComment": "/**\n * Configuração global do Flow Test Engine\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EngineConfig "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "EngineConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineConfig#discovery:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "discovery?: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveryConfig",
                  "canonicalReference": "flow-test-engine!DiscoveryConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "discovery",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineConfig#execution:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execution?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionConfig",
                  "canonicalReference": "flow-test-engine!ExecutionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "execution",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineConfig#globals:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "globals?: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalConfig",
                  "canonicalReference": "flow-test-engine!GlobalConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "globals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineConfig#priorities:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priorities?: "
                },
                {
                  "kind": "Reference",
                  "text": "PriorityConfig",
                  "canonicalReference": "flow-test-engine!PriorityConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "priorities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineConfig#project_name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "project_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "project_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineConfig#reporting:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reporting?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReportingConfig",
                  "canonicalReference": "flow-test-engine!ReportingConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reporting",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineConfig#test_directory:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "test_directory: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "test_directory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!EngineExecutionOptions:interface",
          "docComment": "/**\n * Opções de execução do engine\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EngineExecutionOptions "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "EngineExecutionOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineExecutionOptions#config_file:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config_file?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "config_file",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineExecutionOptions#dry_run:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dry_run?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dry_run",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineExecutionOptions#environment:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "environment?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "environment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineExecutionOptions#filters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filters?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        priority?: string[];\n        node_ids?: string[];\n        suite_names?: string[];\n        tags?: string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "filters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineExecutionOptions#logging:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logging?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        enabled?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logging",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineExecutionOptions#test_directory:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "test_directory?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "test_directory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineExecutionOptions#verbosity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verbosity?: "
                },
                {
                  "kind": "Content",
                  "text": "\"silent\" | \"simple\" | \"detailed\" | \"verbose\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "verbosity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!EngineHooks:interface",
          "docComment": "/**\n * Engine lifecycle hooks for monitoring and extending test execution\n *\n * Provides callback functions that are triggered at different stages of test execution, allowing for custom logging, monitoring, reporting, and integration with external systems. All hooks are optional and can be async functions.\n *\n * @example\n * ```typescript\n * const hooks: EngineHooks = {\n *   onTestDiscovered: async (test) => {\n *     console.log(`📋 Discovered: ${test.suite_name}`);\n *     await analyticsTracker.trackTestDiscovered(test);\n *   },\n *\n *   onSuiteStart: async (suite) => {\n *     console.log(`🚀 Starting suite: ${suite.suite_name}`);\n *     await notificationService.notifySuiteStart(suite);\n *   },\n *\n *   onStepStart: async (step, context) => {\n *     console.log(`▶️ Step: ${step.name}`);\n *     await monitoring.startStepTimer(step.name);\n *   },\n *\n *   onStepEnd: async (step, result, context) => {\n *     const status = result.status === 'success' ? '✅' : '❌';\n *     console.log(`${status} ${step.name} (${result.duration_ms}ms)`);\n *     await monitoring.recordStepResult(step.name, result);\n *   },\n *\n *   onSuiteEnd: async (suite, result) => {\n *     const rate = (result.successful_steps / result.total_steps * 100).toFixed(1);\n *     console.log(`📊 Suite ${suite.suite_name}: ${rate}% success rate`);\n *     await reportingService.saveSuiteResult(suite, result);\n *   },\n *\n *   onExecutionStart: async (stats) => {\n *     console.log(`🎯 Starting execution of ${stats.tests_discovered} test(s)`);\n *     await dashboard.updateExecutionStatus('running');\n *   },\n *\n *   onExecutionEnd: async (result) => {\n *     console.log(`✨ Execution completed: ${result.success_rate}% success rate`);\n *     await dashboard.updateExecutionStatus('completed', result);\n *     await slackNotifier.sendSummary(result);\n *   },\n *\n *   onError: async (error, context) => {\n *     console.error(`💥 Error occurred: ${error.message}`);\n *     await errorTracker.reportError(error, context);\n *     await alertingService.sendAlert(error);\n *   }\n * };\n *\n * const engine = new FlowTestEngine('./config.yml', hooks);\n * ```\n *\n * @since 1.0.0\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EngineHooks "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "EngineHooks",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onError:member",
              "docComment": "/**\n * Called when any error occurs during execution\n *\n * @param error - The error that occurred\n *\n * @param context - Optional context information about where the error occurred\n *\n * @example\n * ```typescript\n * onError: async (error, context) => {\n *   console.error(`💥 Error in ${context?.suite_name || 'unknown'}: ${error.message}`);\n *\n *   // Log to monitoring system\n *   await errorTracking.reportError(error, {\n *     suite: context?.suite_name,\n *     step: context?.current_step,\n *     timestamp: new Date().toISOString(),\n *     stack: error.stack\n *   });\n *\n *   // Alert if critical\n *   if (error.message.includes('CRITICAL')) {\n *     await pagerDuty.triggerAlert({\n *       title: 'Critical test failure',\n *       description: error.message,\n *       severity: 'high'\n *     });\n *   }\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onError?: "
                },
                {
                  "kind": "Content",
                  "text": "(error: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context?: any) => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onExecutionEnd:member",
              "docComment": "/**\n * Called when the entire test execution completes\n *\n * @param result - Final aggregated results of all test executions\n *\n * @example\n * ```typescript\n * onExecutionEnd: async (result) => {\n *   const rate = result.success_rate.toFixed(1);\n *   console.log(`✨ Execution completed: ${rate}% success rate`);\n *\n *   // Update CI system\n *   const status = result.failed_tests === 0 ? 'passed' : 'failed';\n *   await ciSystem.updateBuildStatus(status);\n *\n *   // Send notifications\n *   await emailService.sendExecutionSummary({\n *     successRate: result.success_rate,\n *     totalTests: result.total_tests,\n *     duration: result.total_duration_ms,\n *     reportUrl: `${process.env.REPORT_URL}/latest.html`\n *   });\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onExecutionEnd?: "
                },
                {
                  "kind": "Content",
                  "text": "(result: any) => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onExecutionEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onExecutionStart:member",
              "docComment": "/**\n * Called at the beginning of the entire test execution\n *\n * @param stats - Initial execution statistics\n *\n * @example\n * ```typescript\n * onExecutionStart: async (stats) => {\n *   console.log(`🎯 Starting execution of ${stats.tests_discovered} test suite(s)`);\n *   await ciSystem.updateBuildStatus('running');\n *   await slack.notify(`Test execution started: ${stats.tests_discovered} suites`);\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onExecutionStart?: "
                },
                {
                  "kind": "Content",
                  "text": "(stats: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionStats",
                  "canonicalReference": "flow-test-engine!ExecutionStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onExecutionStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onStepEnd:member",
              "docComment": "/**\n * Called after each test step execution completes\n *\n * @param step - The test step that was executed\n *\n * @param result - The step execution result\n *\n * @param context - Current execution context\n *\n * @example\n * ```typescript\n * onStepEnd: async (step, result, context) => {\n *   const emoji = result.status === 'success' ? '✅' : '❌';\n *   console.log(`${emoji} ${step.name}: ${result.duration_ms}ms`);\n *\n *   if (result.status === 'failure') {\n *     await bugTracker.createIssue({\n *       title: `Test failed: ${step.name}`,\n *       description: result.error_message,\n *       suite: context.suite.suite_name\n *     });\n *   }\n *\n *   await tracing.endSpan(`step.${step.name}`, {\n *     status: result.status,\n *     duration: result.duration_ms\n *   });\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onStepEnd?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "TestStep",
                  "canonicalReference": "flow-test-engine!TestStep:interface"
                },
                {
                  "kind": "Content",
                  "text": ", result: any, context: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionContext",
                  "canonicalReference": "flow-test-engine!ExecutionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onStepEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onStepStart:member",
              "docComment": "/**\n * Called before each test step execution\n *\n * @param step - The test step about to be executed\n *\n * @param context - Current execution context with variables and metadata\n *\n * @example\n * ```typescript\n * onStepStart: async (step, context) => {\n *   console.log(`▶️ Executing: ${step.name}`);\n *   console.log(`Variables: ${Object.keys(context.runtime_variables).join(', ')}`);\n *   await tracing.startSpan(`step.${step.name}`);\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onStepStart?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "TestStep",
                  "canonicalReference": "flow-test-engine!TestStep:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionContext",
                  "canonicalReference": "flow-test-engine!ExecutionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onStepStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onSuiteEnd:member",
              "docComment": "/**\n * Called when a test suite execution completes (success or failure)\n *\n * @param suite - The test suite that was executed\n *\n * @param result - The execution result containing status, metrics, and details\n *\n * @example\n * ```typescript\n * onSuiteEnd: async (suite, result) => {\n *   const duration = await metrics.endTimer(`suite.${suite.suite_name}`);\n *   await reportDB.saveSuiteResult({\n *     suiteName: suite.suite_name,\n *     status: result.status,\n *     duration,\n *     steps: result.steps_results\n *   });\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSuiteEnd?: "
                },
                {
                  "kind": "Content",
                  "text": "(suite: "
                },
                {
                  "kind": "Reference",
                  "text": "TestSuite",
                  "canonicalReference": "flow-test-engine!TestSuite:interface"
                },
                {
                  "kind": "Content",
                  "text": ", result: any) => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSuiteEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onSuiteStart:member",
              "docComment": "/**\n * Called when a test suite execution begins\n *\n * @param suite - The test suite about to be executed\n *\n * @example\n * ```typescript\n * onSuiteStart: async (suite) => {\n *   console.log(`🚀 Starting ${suite.suite_name} with ${suite.steps.length} steps`);\n *   await metrics.startTimer(`suite.${suite.suite_name}`);\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSuiteStart?: "
                },
                {
                  "kind": "Content",
                  "text": "(suite: "
                },
                {
                  "kind": "Reference",
                  "text": "TestSuite",
                  "canonicalReference": "flow-test-engine!TestSuite:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSuiteStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!EngineHooks#onTestDiscovered:member",
              "docComment": "/**\n * Called when a test suite is discovered during the discovery phase\n *\n * @param test - The discovered test with metadata (suite name, priority, file path, etc.)\n *\n * @example\n * ```typescript\n * onTestDiscovered: async (test) => {\n *   logger.info(`Found test: ${test.suite_name} (priority: ${test.priority})`);\n *   await testRegistry.register(test);\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTestDiscovered?: "
                },
                {
                  "kind": "Content",
                  "text": "(test: any) => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTestDiscovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ExecutionConfig:interface",
          "docComment": "/**\n * Configuração de execução\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExecutionConfig "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "ExecutionConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionConfig#continue_on_failure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "continue_on_failure?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "continue_on_failure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionConfig#max_parallel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max_parallel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max_parallel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionConfig#mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode: "
                },
                {
                  "kind": "Content",
                  "text": "\"sequential\" | \"parallel\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionConfig#retry_failed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retry_failed?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        enabled: boolean;\n        max_attempts: number;\n        delay_ms: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retry_failed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionConfig#timeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ExecutionContext:interface",
          "docComment": "/**\n * Execution context for a running test\n *\n * Contains all runtime information and state for the currently executing test, including suite definition, variable scopes, and execution metadata.\n *\n * @example\n * ```typescript\n * const context: ExecutionContext = {\n *   suite: {\n *     suite_name: \"User API Tests\",\n *     steps: [...]\n *   },\n *   global_variables: {\n *     api_base_url: \"https://api.example.com\",\n *     auth_token: \"abc123\"\n *   },\n *   runtime_variables: {\n *     user_id: \"user_456\",\n *     test_timestamp: \"2024-01-01T12:00:00Z\"\n *   },\n *   step_index: 2,\n *   total_steps: 5,\n *   start_time: new Date(\"2024-01-01T12:00:00Z\"),\n *   execution_id: \"exec_789\"\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExecutionContext "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "ExecutionContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionContext#execution_id:member",
              "docComment": "/**\n * Unique identifier for this execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execution_id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "execution_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionContext#global_variables:member",
              "docComment": "/**\n * Variables shared across all tests\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "global_variables: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "global_variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionContext#runtime_variables:member",
              "docComment": "/**\n * Variables specific to current execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runtime_variables: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "runtime_variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionContext#start_time:member",
              "docComment": "/**\n * When execution started\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start_time: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionContext#step_index:member",
              "docComment": "/**\n * Current step index (0-based)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step_index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "step_index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionContext#suite:member",
              "docComment": "/**\n * The test suite being executed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suite: "
                },
                {
                  "kind": "Reference",
                  "text": "TestSuite",
                  "canonicalReference": "flow-test-engine!TestSuite:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suite",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionContext#total_steps:member",
              "docComment": "/**\n * Total number of steps in suite\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "total_steps: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "total_steps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ExecutionFilters:interface",
          "docComment": "/**\n * Filtros de execução\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExecutionFilters "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "ExecutionFilters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionFilters#exclude_patterns:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exclude_patterns?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exclude_patterns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionFilters#file_patterns:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "file_patterns?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "file_patterns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionFilters#max_duration_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max_duration_ms?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max_duration_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionFilters#node_ids:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "node_ids?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "node_ids",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionFilters#priorities:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priorities?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "priorities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionFilters#suite_names:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suite_names?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "suite_names",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionFilters#tags:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tags?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!ExecutionService:class",
          "docComment": "/**\n * Test execution service\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ExecutionService "
            }
          ],
          "fileUrlPath": "src/services/execution.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ExecutionService",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!ExecutionService:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ExecutionService` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(configManager: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigManager",
                  "canonicalReference": "flow-test-engine!ConfigManager:class"
                },
                {
                  "kind": "Content",
                  "text": ", globalVariables: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalVariablesService",
                  "canonicalReference": "flow-test-engine!GlobalVariablesService:class"
                },
                {
                  "kind": "Content",
                  "text": ", priorityService: "
                },
                {
                  "kind": "Reference",
                  "text": "PriorityService",
                  "canonicalReference": "flow-test-engine!PriorityService:class"
                },
                {
                  "kind": "Content",
                  "text": ", dependencyService: "
                },
                {
                  "kind": "Reference",
                  "text": "DependencyService",
                  "canonicalReference": "flow-test-engine!~DependencyService:class"
                },
                {
                  "kind": "Content",
                  "text": ", globalRegistry: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalRegistryService",
                  "canonicalReference": "flow-test-engine!~GlobalRegistryService:class"
                },
                {
                  "kind": "Content",
                  "text": ", hooks?: "
                },
                {
                  "kind": "Reference",
                  "text": "EngineHooks",
                  "canonicalReference": "flow-test-engine!EngineHooks:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "globalVariables",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "priorityService",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dependencyService",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "globalRegistry",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "hooks",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ExecutionService#executeTests:member(1)",
              "docComment": "/**\n * Executes list of discovered tests with dependency-aware execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executeTests(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", onStatsUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "(stats: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionStats",
                  "canonicalReference": "flow-test-engine!ExecutionStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SuiteExecutionResult",
                  "canonicalReference": "flow-test-engine!SuiteExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "onStatsUpdate",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "executeTests"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ExecutionService#getPerformanceSummary:member(1)",
              "docComment": "/**\n * Generates performance summary\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPerformanceSummary(): "
                },
                {
                  "kind": "Reference",
                  "text": "PerformanceSummary",
                  "canonicalReference": "flow-test-engine!PerformanceSummary:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPerformanceSummary"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ExecutionStats:interface",
          "docComment": "/**\n * Real-time execution statistics and metrics\n *\n * Provides comprehensive metrics about the current execution state, including counts, timing, and performance data.\n *\n * @example\n * ```typescript\n * const stats: ExecutionStats = {\n *   tests_discovered: 15,\n *   tests_completed: 10,\n *   tests_successful: 8,\n *   tests_failed: 2,\n *   tests_skipped: 0,\n *   current_test: \"User Authentication Tests\",\n *   estimated_time_remaining_ms: 45000,\n *   requests_made: 127,\n *   total_response_time_ms: 12500\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExecutionStats "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "ExecutionStats",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#current_test:member",
              "docComment": "/**\n * Name of currently executing test\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "current_test?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "current_test",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#estimated_time_remaining_ms:member",
              "docComment": "/**\n * Estimated time remaining in milliseconds\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "estimated_time_remaining_ms?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "estimated_time_remaining_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#requests_made:member",
              "docComment": "/**\n * Total HTTP requests made\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requests_made: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requests_made",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#tests_completed:member",
              "docComment": "/**\n * Number of test suites completed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tests_completed: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tests_completed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#tests_discovered:member",
              "docComment": "/**\n * Total number of test suites discovered\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tests_discovered: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tests_discovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#tests_failed:member",
              "docComment": "/**\n * Number of test suites that failed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tests_failed: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tests_failed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#tests_skipped:member",
              "docComment": "/**\n * Number of test suites that were skipped\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tests_skipped: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tests_skipped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#tests_successful:member",
              "docComment": "/**\n * Number of test suites that passed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tests_successful: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tests_successful",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ExecutionStats#total_response_time_ms:member",
              "docComment": "/**\n * Cumulative response time across all requests\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "total_response_time_ms: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "total_response_time_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!FlowDependency:interface",
          "docComment": "/**\n * Flow dependency configuration\n *\n * @example\n * ```typescript\n * const dependency: FlowDependency = {\n *   path: \"./auth/setup-auth.yaml\",\n *   required: true,\n *   cache: 300, // 5 minutes TTL\n *   condition: \"environment == 'test'\",\n *   variables: {\n *     test_mode: true\n *   },\n *   retry: {\n *     max_attempts: 2,\n *     delay_ms: 1000\n *   }\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FlowDependency "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "FlowDependency",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!FlowDependency#cache:member",
              "docComment": "/**\n * Cache configuration: true, false, or TTL in seconds\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cache?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!FlowDependency#condition:member",
              "docComment": "/**\n * JMESPath condition for conditional execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "condition?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "condition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!FlowDependency#node_id:member",
              "docComment": "/**\n * Node ID for direct reference to another test suite\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "node_id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "node_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!FlowDependency#path:member",
              "docComment": "/**\n * Path to the dependency flow or node_id for direct reference\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!FlowDependency#required:member",
              "docComment": "/**\n * Whether this dependency is required for execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "required?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "required",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!FlowDependency#retry:member",
              "docComment": "/**\n * Retry configuration for failed dependencies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retry?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        max_attempts: number;\n        delay_ms: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!FlowDependency#variables:member",
              "docComment": "/**\n * Variables to override in the dependency\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!FlowTestEngine:class",
          "docComment": "/**\n * Main Flow Test Engine orchestrator\n *\n * This class is responsible for orchestrating the entire test execution process, from discovery to report generation. It coordinates all the necessary services to execute test suites defined in YAML files.\n *\n * @example\n * ```typescript\n * const engine = new FlowTestEngine('./config.yaml');\n *\n * // Configure hooks for monitoring\n * const hooks = {\n *   onSuiteStart: (suite) => console.log(`▶️ Starting ${suite.suite_name}`),\n *   onSuiteEnd: (suite, result) => console.log(`✅ Completed ${suite.suite_name}`)\n * };\n *\n * // Execute tests with filters\n * const result = await engine.run({\n *   filters: {\n *     tags: [\"smoke\", \"regression\"],\n *     priority: \"high\"\n *   },\n *   hooks,\n *   parallel: true\n * });\n *\n * console.log(`Executed ${result.total_suites} test suites`);\n * console.log(`Success rate: ${result.success_rate}%`);\n * ```\n *\n * @since 1.0.0\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FlowTestEngine "
            }
          ],
          "fileUrlPath": "src/core/engine.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "FlowTestEngine",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!FlowTestEngine:constructor(1)",
              "docComment": "/**\n * Flow Test Engine constructor\n *\n * Initializes all necessary services for test execution in the correct dependency order. Services are initialized according to their interdependencies.\n *\n * @param configFileOrOptions - Path to config file or direct options object\n *\n * @param hooks - Optional lifecycle event hooks for monitoring and extending functionality\n *\n * @example\n * ```typescript\n * // With configuration file\n * const engine = new FlowTestEngine('./flow-test.config.yml');\n *\n * // With direct options\n * const engine = new FlowTestEngine({\n *   test_directory: './tests',\n *   verbosity: 'verbose',\n *   parallel_execution: true,\n *   max_workers: 4\n * });\n *\n * // With lifecycle hooks for monitoring\n * const engine = new FlowTestEngine('./config.yml', {\n *   onExecutionStart: (stats) => {\n *     console.log(`🚀 Starting execution of ${stats.tests_discovered} test suites`);\n *     startTimer();\n *   },\n *   onSuiteStart: (suite) => {\n *     logger.info(`▶️ Executing: ${suite.suite_name}`);\n *   },\n *   onExecutionEnd: (result) => {\n *     const duration = stopTimer();\n *     console.log(`✨ Execution completed in ${duration}ms`);\n *     console.log(`Success rate: ${result.success_rate.toFixed(1)}%`);\n *   }\n * });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(configFileOrOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "EngineExecutionOptions",
                  "canonicalReference": "flow-test-engine!EngineExecutionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", hooks?: "
                },
                {
                  "kind": "Reference",
                  "text": "EngineHooks",
                  "canonicalReference": "flow-test-engine!EngineHooks:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configFileOrOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "hooks",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!FlowTestEngine#dryRun:member(1)",
              "docComment": "/**\n * Execução em modo dry-run (apenas descoberta e ordenação)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dryRun(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "dryRun"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!FlowTestEngine#getConfig:member(1)",
              "docComment": "/**\n * Obtém configuração atual\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConfig(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"../types/config.types\")."
                },
                {
                  "kind": "Reference",
                  "text": "EngineConfig",
                  "canonicalReference": "flow-test-engine!EngineConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!FlowTestEngine#getStats:member(1)",
              "docComment": "/**\n * Obtém estatísticas atuais\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStats(): "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionStats",
                  "canonicalReference": "flow-test-engine!ExecutionStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getStats"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!FlowTestEngine#run:member(1)",
              "docComment": "/**\n * Executes all discovered tests in the configured directory\n *\n * This method is the main entry point for test execution. It performs the complete lifecycle: discovery, filtering, sorting, execution, and report generation. The execution follows these phases: 1. Test Discovery - Scans for YAML test files 2. Filtering - Applies configured filters (tags, priority, etc.) 3. Dependency Resolution - Resolves inter-test dependencies 4. Execution - Runs tests with configured parallelism 5. Reporting - Generates HTML and JSON reports\n *\n * @returns Promise that resolves to aggregated results of all executed tests\n *\n * @throws\n *\n * Error if there's a critical failure during execution\n *\n * @example\n * ```typescript\n * // Basic execution\n * const result = await engine.run();\n * if (result.overall_status === 'success') {\n *   console.log('All tests passed!');\n *   console.log(`Success rate: ${result.success_rate}%`);\n * }\n *\n * // Check detailed results\n * console.log(`Total suites: ${result.total_suites}`);\n * console.log(`Passed: ${result.passed_suites}`);\n * console.log(`Failed: ${result.failed_suites}`);\n * console.log(`Skipped: ${result.skipped_suites}`);\n * console.log(`Execution time: ${result.total_execution_time}ms`);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AggregatedResult",
                  "canonicalReference": "flow-test-engine!AggregatedResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "run"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!GlobalConfig:interface",
          "docComment": "/**\n * Configurações globais (variáveis, timeouts, etc.)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GlobalConfig "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "GlobalConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalConfig#base_url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "base_url?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "base_url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalConfig#timeouts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeouts?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        default?: number;\n        slow_tests?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timeouts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalConfig#variables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!GlobalVariableContext:interface",
          "docComment": "/**\n * Contexto de variáveis hierárquico\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GlobalVariableContext "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "GlobalVariableContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalVariableContext#environment:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "environment: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "environment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalVariableContext#global:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "global: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "global",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalVariableContext#imported:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imported: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "imported",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalVariableContext#runtime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "runtime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!GlobalVariableContext#suite:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suite: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suite",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!GlobalVariablesService:class",
          "docComment": "/**\n * Service for managing global variables with hierarchy and cache\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GlobalVariablesService "
            }
          ],
          "fileUrlPath": "src/services/global-variables.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "GlobalVariablesService",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!GlobalVariablesService:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `GlobalVariablesService` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(configManager: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigManager",
                  "canonicalReference": "flow-test-engine!ConfigManager:class"
                },
                {
                  "kind": "Content",
                  "text": ", globalRegistry?: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalRegistryService",
                  "canonicalReference": "flow-test-engine!~GlobalRegistryService:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "globalRegistry",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#clearAllNonGlobalVariables:member(1)",
              "docComment": "/**\n * Clears all non-global variables (used when starting a new test suite) Preserves only environment and global variables\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearAllNonGlobalVariables(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clearAllNonGlobalVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#clearCache:member(1)",
              "docComment": "/**\n * Clears the interpolation cache\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearCache(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clearCache"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#clearRuntimeVariables:member(1)",
              "docComment": "/**\n * Clears runtime variables (used when switching between nodes) Preserves environment, global, and suite variables\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearRuntimeVariables(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clearRuntimeVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#clearSuiteVariables:member(1)",
              "docComment": "/**\n * Clears suite-specific variables (used when switching between test suites) Preserves environment and global variables, clears runtime variables\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearSuiteVariables(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clearSuiteVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#createSnapshot:member(1)",
              "docComment": "/**\n * Creates a snapshot of the current variable state\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSnapshot(): "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "createSnapshot"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#exportState:member(1)",
              "docComment": "/**\n * Exports current variable state for debug\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exportState(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "exportState"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#getAllVariables:member(1)",
              "docComment": "/**\n * Gets all variables merged by hierarchy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllVariables(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#getAvailableVariableNames:member(1)",
              "docComment": "/**\n * Lists names of all available variables\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAvailableVariableNames(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAvailableVariableNames"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#getContext:member(1)",
              "docComment": "/**\n * Gets complete variable context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalVariableContext",
                  "canonicalReference": "flow-test-engine!GlobalVariableContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#getStats:member(1)",
              "docComment": "/**\n * Gets statistics of the variable system\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStats(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        environment_vars: number;\n        global_vars: number;\n        suite_vars: number;\n        runtime_vars: number;\n        cache_size: number;\n        cache_enabled: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getStats"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#getVariable:member(1)",
              "docComment": "/**\n * Gets a specific variable following the hierarchy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVariable(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVariable"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#getVariablesByScope:member(1)",
              "docComment": "/**\n * Gets variables from a specific scope\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVariablesByScope(scope: "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalVariableContext",
                  "canonicalReference": "flow-test-engine!GlobalVariableContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVariablesByScope"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#hasVariable:member(1)",
              "docComment": "/**\n * Checks if a variable exists\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasVariable(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasVariable"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#importState:member(1)",
              "docComment": "/**\n * Restores context from an exported state\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "importState(state: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "state",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "importState"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#interpolate:member(1)",
              "docComment": "/**\n * Interpolates any object (strings, objects, arrays)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interpolate<T>(obj: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "obj",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "interpolate"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#interpolateString:member(1)",
              "docComment": "/**\n * Interpolates a string replacing {{variable}} with values\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interpolateString(template: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "template",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "interpolateString"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#mergeContext:member(1)",
              "docComment": "/**\n * Merges variables from another context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mergeContext(otherContext: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GlobalVariableContext",
                  "canonicalReference": "flow-test-engine!GlobalVariableContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "otherContext",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mergeContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setCacheEnabled:member(1)",
              "docComment": "/**\n * Enables/disables interpolation cache\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCacheEnabled(enabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCacheEnabled"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setDependencies:member(1)",
              "docComment": "/**\n * Sets the dependencies for this flow (node_ids of dependent flows)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDependencies(dependencies: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dependencies",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDependencies"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setExecutionContext:member(1)",
              "docComment": "/**\n * Updates the current execution context for JavaScript expressions\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setExecutionContext(context: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "JavaScriptExecutionContext",
                  "canonicalReference": "flow-test-engine!~JavaScriptExecutionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setExecutionContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setGlobalRegistry:member(1)",
              "docComment": "/**\n * Sets the Global Registry for resolution of exported variables\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setGlobalRegistry(globalRegistry: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalRegistryService",
                  "canonicalReference": "flow-test-engine!~GlobalRegistryService:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "globalRegistry",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setGlobalRegistry"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setRuntimeVariable:member(1)",
              "docComment": "/**\n * Sets a single variable in runtime scope\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRuntimeVariable(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRuntimeVariable"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setRuntimeVariables:member(1)",
              "docComment": "/**\n * Sets variables in runtime scope\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRuntimeVariables(variables: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "variables",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRuntimeVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setSuiteVariables:member(1)",
              "docComment": "/**\n * Sets variables in suite scope\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSuiteVariables(variables: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "variables",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setSuiteVariables"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!GlobalVariablesService#setVariable:member(1)",
              "docComment": "/**\n * Sets a specific variable in runtime\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setVariable(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", scope?: "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalVariableContext",
                  "canonicalReference": "flow-test-engine!GlobalVariableContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setVariable"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!HttpService:class",
          "docComment": "/**\n * HTTP Service responsible for executing requests and processing responses\n *\n * This service encapsulates HTTP request execution logic using axios, including URL construction, error handling, performance measurement, and response normalization for the Flow Test Engine.\n *\n * @remarks\n *\n * The HttpService automatically handles: - URL construction from base URL and relative paths - Request timeout management - Response time measurement - Error normalization and logging - Header and body processing\n *\n * @example\n *\n * Basic HTTP request execution\n * ```typescript\n * const httpService = new HttpService('https://api.example.com', 30000);\n * const result = await httpService.executeRequest('Login', {\n *   method: 'POST',\n *   url: '/auth/login',\n *   body: { username: 'user', password: 'pass' }\n * });\n *\n * console.log(`Request completed in ${result.response_time}ms`);\n * console.log(`Status: ${result.status_code}`);\n * ```\n *\n * @example\n *\n * Request with custom headers\n * ```typescript\n * const result = await httpService.executeRequest('GetUser', {\n *   method: 'GET',\n *   url: '/users/123',\n *   headers: {\n *     'Authorization': 'Bearer token',\n *     'Content-Type': 'application/json'\n *   }\n * });\n * ```\n *\n * @since 1.0.0\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class HttpService "
            }
          ],
          "fileUrlPath": "src/services/http.service.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "HttpService",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!HttpService:constructor(1)",
              "docComment": "/**\n * Creates a new HttpService instance\n *\n * @param baseUrl - Optional base URL to prefix relative request URLs\n *\n * @param timeout - Request timeout in milliseconds\n *\n * @defaultValue\n *\n * timeout - 60000ms (60 seconds)\n *\n * @example\n *\n * Constructor with base URL\n * ```typescript\n * const service = new HttpService('https://api.example.com');\n * ```\n *\n * @example\n *\n * Constructor with custom timeout\n * ```typescript\n * const service = new HttpService('https://api.example.com', 60000);\n * ```\n *\n * @example\n *\n * Constructor without base URL (absolute URLs only)\n * ```typescript\n * const service = new HttpService();\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(baseUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", timeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "baseUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "timeout",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!HttpService#executeRequest:member(1)",
              "docComment": "/**\n * Executes an HTTP request and returns the execution details\n *\n * Main method for executing HTTP requests. Automatically measures response time, handles errors appropriately and normalizes the response in a standardized format.\n *\n * @param stepName - Step name for identification in logs and results\n *\n * @param request - HTTP request details to be executed\n *\n * @returns Promise that resolves to the execution result\n *\n * @example\n * ```typescript\n * const result = await httpService.executeRequest('Get User', {\n *   method: 'GET',\n *   url: '/users/123',\n *   headers: { 'Authorization': 'Bearer token' }\n * });\n *\n * if (result.status === 'success') {\n *   console.log('Status:', result.response_details?.status_code);\n *   console.log('Body:', result.response_details?.body);\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executeRequest(stepName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", request: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestDetails",
                  "canonicalReference": "flow-test-engine!RequestDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StepExecutionResult",
                  "canonicalReference": "flow-test-engine!StepExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "stepName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "executeRequest"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!HttpService#setBaseUrl:member(1)",
              "docComment": "/**\n * Sets a new base URL.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setBaseUrl(baseUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "baseUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setBaseUrl"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!HttpService#setTimeout:member(1)",
              "docComment": "/**\n * Sets a new timeout for requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTimeout(timeout: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "timeout",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTimeout"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flow-test-engine!IterationConfig:type",
          "docComment": "/**\n * Unified iteration configuration\n *\n * Supports both array iteration and range iteration patterns.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IterationConfig = "
            },
            {
              "kind": "Reference",
              "text": "ArrayIterationConfig",
              "canonicalReference": "flow-test-engine!ArrayIterationConfig:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RangeIterationConfig",
              "canonicalReference": "flow-test-engine!RangeIterationConfig:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "IterationConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!IterationContext:interface",
          "docComment": "/**\n * Context for a single iteration execution\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IterationContext "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "IterationContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!IterationContext#index:member",
              "docComment": "/**\n * Current iteration index (0-based)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!IterationContext#isFirst:member",
              "docComment": "/**\n * Whether this is the first iteration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFirst: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isFirst",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!IterationContext#isLast:member",
              "docComment": "/**\n * Whether this is the last iteration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLast: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!IterationContext#value:member",
              "docComment": "/**\n * Current item (for array iteration) or current value (for range iteration)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!IterationContext#variableName:member",
              "docComment": "/**\n * Variable name to bind the value to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variableName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "variableName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "flow-test-engine!PACKAGE_INFO:var",
          "docComment": "/**\n * Informações do package\n *\n * Metadados sobre o Flow Test Engine incluindo nome, versão e descrição. Útil para integração em ferramentas que precisam identificar a versão.\n *\n * @example\n * ```typescript\n * console.log(`Using ${PACKAGE_INFO.name} v${PACKAGE_INFO.version}`);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "PACKAGE_INFO: "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly name: \"flow-test-engine\";\n    readonly version: \"1.0.0\";\n    readonly description: \"A comprehensive API testing engine with directory-based execution, global variables, and priority-driven test management.\";\n}"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "PACKAGE_INFO",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!PerformanceSummary:interface",
          "docComment": "/**\n * Resumo de performance\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PerformanceSummary "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "PerformanceSummary",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PerformanceSummary#average_response_time_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "average_response_time_ms: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "average_response_time_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PerformanceSummary#max_response_time_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max_response_time_ms: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "max_response_time_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PerformanceSummary#min_response_time_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min_response_time_ms: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "min_response_time_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PerformanceSummary#requests_per_second:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requests_per_second: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requests_per_second",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PerformanceSummary#slowest_endpoints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slowest_endpoints: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        url: string;\n        average_time_ms: number;\n        call_count: number;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "slowest_endpoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PerformanceSummary#total_requests:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "total_requests: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "total_requests",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "flow-test-engine!planTests:function(1)",
          "docComment": "/**\n * Função para dry-run (apenas descoberta e planejamento)\n *\n * Executa apenas a fase de descoberta e planejamento dos testes sem executar as requisições HTTP. Útil para validar configuração e visualizar o plano de execução.\n *\n * @param configPath - Caminho opcional para arquivo de configuração\n *\n * @returns Promise que resolve para informações sobre testes descobertos\n *\n * @example\n * ```typescript\n * const plan = await planTests('./config.yml');\n * console.log(`Found ${plan.total_tests} tests to execute`);\n * plan.suites_results.forEach(suite => {\n *   console.log(`- ${suite.suite_name} (${suite.total_steps} steps)`);\n * });\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function planTests(configPath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configPath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "planTests"
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!PriorityConfig:interface",
          "docComment": "/**\n * Sistema de prioridades\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PriorityConfig "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "PriorityConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PriorityConfig#fail_fast_on_required:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fail_fast_on_required?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fail_fast_on_required",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PriorityConfig#levels:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "levels: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "levels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!PriorityConfig#required:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "required?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "required",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!PriorityService:class",
          "docComment": "/**\n * Service for managing priorities and test ordering\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PriorityService "
            }
          ],
          "fileUrlPath": "src/services/priority.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PriorityService",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!PriorityService:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PriorityService` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(configManager: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigManager",
                  "canonicalReference": "flow-test-engine!ConfigManager:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#createExecutionPlan:member(1)",
              "docComment": "/**\n * Creates a detailed execution plan\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createExecutionPlan(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        phases: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n            name: string;\n            tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[];\n            estimated_duration: number;\n            is_required: boolean;\n        }>;\n        total_duration: number;\n        critical_path: string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createExecutionPlan"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#filterByPriority:member(1)",
              "docComment": "/**\n * Filtra testes por nível de prioridade\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filterByPriority(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", priorities: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "priorities",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "filterByPriority"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#getPriorityStats:member(1)",
              "docComment": "/**\n * Calculates priority statistics\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPriorityStats(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        total_tests: number;\n        required_tests: number;\n        by_priority: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, {\n            count: number;\n            percentage: number;\n            estimated_duration: number;\n        }>;\n        total_estimated_duration: number;\n        required_estimated_duration: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPriorityStats"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#getRequiredTests:member(1)",
              "docComment": "/**\n * Filtra apenas testes obrigatórios\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRequiredTests(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRequiredTests"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#groupByPriority:member(1)",
              "docComment": "/**\n * Groups tests by priority\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupByPriority(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "groupByPriority"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#isRequiredTest:member(1)",
              "docComment": "/**\n * Checks if a test is considered required\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isRequiredTest(test: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "test",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isRequiredTest"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#orderTests:member(1)",
              "docComment": "/**\n * Orders tests by priority and dependencies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orderTests(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "orderTests"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!PriorityService#suggestOptimizations:member(1)",
              "docComment": "/**\n * Suggests optimizations in priority distribution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suggestOptimizations(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "suggestOptimizations"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!RangeIterationConfig:interface",
          "docComment": "/**\n * Configuration for range iteration in test steps\n *\n * @example\n * ```yaml\n * iterate:\n *   range: \"1..5\"\n *   as: \"index\"\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RangeIterationConfig "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "RangeIterationConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RangeIterationConfig#as:member",
              "docComment": "/**\n * Variable name to use for the current index in each iteration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "as: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "as",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RangeIterationConfig#range:member",
              "docComment": "/**\n * Range specification in format \"start..end\" (inclusive)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "range: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "range",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "flow-test-engine!ReportFormat:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReportFormat = "
            },
            {
              "kind": "Content",
              "text": "\"json\" | \"junit\" | \"html\" | \"console\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "ReportFormat",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ReportingConfig:interface",
          "docComment": "/**\n * Configuração de relatórios\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReportingConfig "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "ReportingConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReportingConfig#aggregate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "aggregate: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "aggregate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReportingConfig#formats:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formats: "
                },
                {
                  "kind": "Reference",
                  "text": "ReportFormat",
                  "canonicalReference": "flow-test-engine!ReportFormat:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "formats",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReportingConfig#include_performance_metrics:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "include_performance_metrics?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "include_performance_metrics",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReportingConfig#include_variables_state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "include_variables_state?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "include_variables_state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReportingConfig#output_dir:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "output_dir: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "output_dir",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!ReportingService:class",
          "docComment": "/**\n * Service for generating reports in multiple formats\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReportingService "
            }
          ],
          "fileUrlPath": "src/services/reporting.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ReportingService",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!ReportingService:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ReportingService` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(configManager: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigManager",
                  "canonicalReference": "flow-test-engine!ConfigManager:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!ReportingService#generateReports:member(1)",
              "docComment": "/**\n * Generates all configured reports\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateReports(result: "
                },
                {
                  "kind": "Reference",
                  "text": "AggregatedResult",
                  "canonicalReference": "flow-test-engine!AggregatedResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateReports"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!RequestDetails:interface",
          "docComment": "/**\n * Detalhes de uma requisição HTTP com suporte estendido\n *\n * Versão aprimorada que inclui timeout configurável e métodos HTTP adicionais como HEAD e OPTIONS para casos de uso avançados.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestDetails "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "RequestDetails",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RequestDetails#body:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "body?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RequestDetails#headers:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RequestDetails#method:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "method: "
                },
                {
                  "kind": "Content",
                  "text": "\"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\" | \"HEAD\" | \"OPTIONS\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RequestDetails#params:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RequestDetails#timeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!RequestDetails#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ReusableFlow:interface",
          "docComment": "/**\n * Reusable flow definition\n *\n * @example\n * ```typescript\n * const reusableFlow: ReusableFlow = {\n *   flow_name: \"User Registration Flow\",\n *   description: \"Complete user registration with validation\",\n *   variables: {\n *     base_url: \"https://api.example.com\",\n *     test_email: \"test@example.com\"\n *   },\n *   steps: [\n *     {\n *       name: \"Create user account\",\n *       request: {\n *         method: \"POST\",\n *         url: \"/users\",\n *         body: { email: \"{{test_email}}\" }\n *       }\n *     }\n *   ]\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReusableFlow "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "ReusableFlow",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReusableFlow#depends:member",
              "docComment": "/**\n * Flow dependencies that must be executed first\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depends?: "
                },
                {
                  "kind": "Reference",
                  "text": "FlowDependency",
                  "canonicalReference": "flow-test-engine!FlowDependency:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "depends",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReusableFlow#description:member",
              "docComment": "/**\n * Description of what this flow does\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReusableFlow#exports:member",
              "docComment": "/**\n * Variables to export to global scope after execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exports?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exports",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReusableFlow#flow_name:member",
              "docComment": "/**\n * Name of the reusable flow\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flow_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "flow_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReusableFlow#metadata:member",
              "docComment": "/**\n * Additional metadata for flow execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        priority?: string;\n        tags?: string[];\n        estimated_duration_ms?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReusableFlow#steps:member",
              "docComment": "/**\n * Test steps that comprise the flow\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "steps: "
                },
                {
                  "kind": "Reference",
                  "text": "TestStep",
                  "canonicalReference": "flow-test-engine!TestStep:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "steps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ReusableFlow#variables:member",
              "docComment": "/**\n * Default variables for the flow\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "flow-test-engine!runTests:function(1)",
          "docComment": "/**\n * Função de conveniência para execução one-shot\n *\n * Cria um engine, executa todos os testes e retorna o resultado. Ideal para automação e integração em pipelines de CI/CD.\n *\n * @param configPath - Caminho opcional para arquivo de configuração\n *\n * @returns Promise que resolve para o resultado agregado da execução\n *\n * @example\n * ```typescript\n * // Execução simples\n * const result = await runTests();\n * console.log(`Success rate: ${result.success_rate}%`);\n *\n * // Com configuração específica\n * const result2 = await runTests('./prod-config.yml');\n * if (result2.failed_tests > 0) {\n *   process.exit(1);\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function runTests(configPath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configPath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "runTests"
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ScenarioEvaluation:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ScenarioEvaluation "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "ScenarioEvaluation",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioEvaluation#assertions_added:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assertions_added?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "assertions_added",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioEvaluation#branch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "branch: "
                },
                {
                  "kind": "Content",
                  "text": "\"then\" | \"else\" | \"none\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "branch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioEvaluation#captures_added:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "captures_added?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "captures_added",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioEvaluation#condition:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "condition: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "condition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioEvaluation#executed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "executed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioEvaluation#index:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioEvaluation#matched:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "matched: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "matched",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!ScenarioMeta:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ScenarioMeta "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "ScenarioMeta",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioMeta#evaluations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "evaluations: "
                },
                {
                  "kind": "Reference",
                  "text": "ScenarioEvaluation",
                  "canonicalReference": "flow-test-engine!ScenarioEvaluation:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "evaluations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioMeta#executed_count:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "executed_count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "executed_count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!ScenarioMeta#has_scenarios:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has_scenarios: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "has_scenarios",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!StepExecutionResult:interface",
          "docComment": "/**\n * Resultado de execução de um step individual\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepExecutionResult "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "StepExecutionResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#assertions_results:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assertions_results?: "
                },
                {
                  "kind": "Reference",
                  "text": "AssertionResult",
                  "canonicalReference": "flow-test-engine!AssertionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "assertions_results",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#available_variables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "available_variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "available_variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#captured_variables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "captured_variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "captured_variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#duration_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration_ms: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#error_message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error_message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error_message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#iteration_results:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iteration_results?: "
                },
                {
                  "kind": "Reference",
                  "text": "StepExecutionResult",
                  "canonicalReference": "flow-test-engine!StepExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iteration_results",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#request_details:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request_details?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        method: string;\n        url: string;\n        headers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>;\n        body?: any;\n        full_url?: string;\n        curl_command?: string;\n        raw_request?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "request_details",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#response_details:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "response_details?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        status_code: number;\n        headers: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>;\n        body: any;\n        size_bytes: number;\n        raw_response?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "response_details",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#scenarios_meta:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scenarios_meta?: "
                },
                {
                  "kind": "Reference",
                  "text": "ScenarioMeta",
                  "canonicalReference": "flow-test-engine!ScenarioMeta:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scenarios_meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "\"success\" | \"failure\" | \"skipped\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!StepExecutionResult#step_name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "step_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!SuiteExecutionResult:interface",
          "docComment": "/**\n * Resultado de execução de uma suíte individual\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SuiteExecutionResult "
            }
          ],
          "fileUrlPath": "src/types/config.types.ts",
          "releaseTag": "Public",
          "name": "SuiteExecutionResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#available_variables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "available_variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "available_variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#duration_ms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration_ms: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration_ms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#end_time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end_time: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#error_message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error_message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error_message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#file_path:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "file_path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "file_path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#node_id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "node_id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "node_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#priority:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#start_time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start_time: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "\"success\" | \"failure\" | \"skipped\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#steps_executed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "steps_executed: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "steps_executed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#steps_failed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "steps_failed: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "steps_failed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#steps_results:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "steps_results: "
                },
                {
                  "kind": "Reference",
                  "text": "StepExecutionResult",
                  "canonicalReference": "flow-test-engine!StepExecutionResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "steps_results",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#steps_successful:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "steps_successful: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "steps_successful",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#success_rate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "success_rate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "success_rate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#suite_name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suite_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suite_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!SuiteExecutionResult#variables_captured:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variables_captured: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "variables_captured",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "flow-test-engine!TestDiscovery:class",
          "docComment": "/**\n * Test discovery service responsible for finding and loading test files\n *\n * This service scans directories for YAML test files, validates their structure, and resolves dependencies between different test suites. It supports filtering by priority, tags, and file patterns.\n *\n * @example\n * ```typescript\n * const configManager = new ConfigManager();\n * const discovery = new TestDiscovery(configManager);\n *\n * // Discover all tests in directory\n * const tests = await discovery.discoverTests();\n *\n * // Filter by priority and tags\n * const filtered = discovery.filterTests(tests, {\n *   priorities: ['critical', 'high'],\n *   tags: ['smoke', 'api']\n * });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TestDiscovery "
            }
          ],
          "fileUrlPath": "src/core/discovery.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TestDiscovery",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "flow-test-engine!TestDiscovery:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `TestDiscovery` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(configManager: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigManager",
                  "canonicalReference": "flow-test-engine!ConfigManager:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!TestDiscovery#discoverTestGroups:member(1)",
              "docComment": "/**\n * Descobre e organiza testes em grupos lógicos\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "discoverTestGroups(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "discoverTestGroups"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!TestDiscovery#discoverTests:member(1)",
              "docComment": "/**\n * Discovers all test files in the configured directory\n *\n * Scans the test directory recursively for YAML files, validates their structure as valid test suites, and returns an array of discovered tests with metadata.\n *\n * @returns Promise resolving to array of discovered test configurations\n *\n * @throws\n *\n * Error if test directory doesn't exist or YAML files are invalid\n *\n * @example\n * ```typescript\n * const tests = await discovery.discoverTests();\n * console.log(`Found ${tests.length} test suites`);\n *\n * tests.forEach(test => {\n *   console.log(`- ${test.suite.suite_name} (${test.filePath})`);\n * });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "discoverTests(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "discoverTests"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!TestDiscovery#findOrphanTests:member(1)",
              "docComment": "/**\n * Detecta testes órfãos (sem dependências e que ninguém depende)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOrphanTests(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findOrphanTests"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!TestDiscovery#getDiscoveryStats:member(1)",
              "docComment": "/**\n * Obtém estatísticas da descoberta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDiscoveryStats(tests: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscoveredTest",
                  "canonicalReference": "flow-test-engine!DiscoveredTest:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        total_tests: number;\n        by_priority: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, number>;\n        total_estimated_duration: number;\n        with_dependencies: number;\n        files_scanned: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tests",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDiscoveryStats"
            },
            {
              "kind": "Method",
              "canonicalReference": "flow-test-engine!TestDiscovery#isValidTestFile:member(1)",
              "docComment": "/**\n * Valida se um arquivo é um teste válido sem carregá-lo completamente\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isValidTestFile(filePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filePath",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isValidTestFile"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!TestStep:interface",
          "docComment": "/**\n * Complete test step definition with extended metadata\n *\n * @example\n * ```typescript\n * const step: TestStep = {\n *   name: \"Create new user account\",\n *   request: {\n *     method: \"POST\",\n *     url: \"/api/users\",\n *     headers: { \"Content-Type\": \"application/json\" },\n *     body: {\n *       username: \"{{test_username}}\",\n *       email: \"{{test_email}}\"\n *     }\n *   },\n *   assert: {\n *     status_code: 201,\n *     body: {\n *       \"id\": { exists: true },\n *       \"username\": { equals: \"{{test_username}}\" }\n *     }\n *   },\n *   capture: {\n *     user_id: \"body.id\",\n *     created_at: \"body.created_at\"\n *   },\n *   continue_on_failure: false,\n *   metadata: {\n *     priority: \"high\",\n *     tags: [\"user-management\", \"regression\"],\n *     timeout: 10000\n *   }\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TestStep "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "TestStep",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#assert:member",
              "docComment": "/**\n * Response assertions to validate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assert?: "
                },
                {
                  "kind": "Reference",
                  "text": "Assertions",
                  "canonicalReference": "flow-test-engine!Assertions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "assert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#capture:member",
              "docComment": "/**\n * Data extraction from response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capture?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "capture",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#continue_on_failure:member",
              "docComment": "/**\n * Whether to continue execution if this step fails\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "continue_on_failure?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "continue_on_failure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#iterate:member",
              "docComment": "/**\n * Iteration configuration for repeating the step multiple times\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iterate?: "
                },
                {
                  "kind": "Reference",
                  "text": "IterationConfig",
                  "canonicalReference": "flow-test-engine!IterationConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iterate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#metadata:member",
              "docComment": "/**\n * Additional metadata for step configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TestStepMetadata",
                  "canonicalReference": "flow-test-engine!TestStepMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#name:member",
              "docComment": "/**\n * Descriptive name for the test step\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#request:member",
              "docComment": "/**\n * HTTP request configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestDetails",
                  "canonicalReference": "flow-test-engine!RequestDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "request",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStep#scenarios:member",
              "docComment": "/**\n * Conditional scenarios for complex flows\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scenarios?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConditionalScenario",
                  "canonicalReference": "flow-test-engine!ConditionalScenario:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scenarios",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!TestStepMetadata:interface",
          "docComment": "/**\n * Metadata for test step configuration and behavior\n *\n * @example\n * ```typescript\n * const metadata: TestStepMetadata = {\n *   priority: \"high\",\n *   tags: [\"auth\", \"smoke\"],\n *   timeout: 5000,\n *   retry: {\n *     max_attempts: 3,\n *     delay_ms: 1000\n *   },\n *   depends_on: [\"login_step\"],\n *   description: \"Validates user authentication token\"\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TestStepMetadata "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "TestStepMetadata",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStepMetadata#depends_on:member",
              "docComment": "/**\n * Array of step names this step depends on\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depends_on?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "depends_on",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStepMetadata#description:member",
              "docComment": "/**\n * Human-readable description of the step\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStepMetadata#priority:member",
              "docComment": "/**\n * Execution priority (high, medium, low)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStepMetadata#retry:member",
              "docComment": "/**\n * Retry configuration for failed steps\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retry?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        max_attempts: number;\n        delay_ms: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStepMetadata#tags:member",
              "docComment": "/**\n * Tags for categorization and filtering\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tags?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestStepMetadata#timeout:member",
              "docComment": "/**\n * Maximum execution time in milliseconds\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "flow-test-engine!TestSuite:interface",
          "docComment": "/**\n * Complete test suite definition with extended metadata\n *\n * @example\n * ```typescript\n * const testSuite: TestSuite = {\n *   node_id: \"user-mgmt-e2e\",\n *   suite_name: \"E2E User Management Tests\",\n *   description: \"Complete end-to-end testing of user management features\",\n *   base_url: \"https://api.example.com\",\n *   // Flow dependencies replaced by 'depends' field\n *   variables: {\n *     test_user_email: \"test@example.com\",\n *     api_version: \"v1\"\n *   },\n *   steps: [\n *     {\n *       name: \"Create user\",\n *       request: {\n *         method: \"POST\",\n *         url: \"/users\",\n *         body: { email: \"{{test_user_email}}\" }\n *       }\n *     }\n *   ],\n *   exports: [\"created_user_id\", \"auth_token\"],\n *   depends: [\n *     {\n *       node_id: \"database_setup\",\n *       required: true\n *     }\n *   ],\n *   metadata: {\n *     priority: \"high\",\n *     tags: [\"e2e\", \"user-management\", \"regression\"],\n *     timeout: 30000,\n *     estimated_duration_ms: 15000\n *   }\n * };\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TestSuite "
            }
          ],
          "fileUrlPath": "src/types/engine.types.ts",
          "releaseTag": "Public",
          "name": "TestSuite",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#base_url:member",
              "docComment": "/**\n * Base URL for all requests in this suite\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "base_url?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "base_url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#depends:member",
              "docComment": "/**\n * Dependencies that must be satisfied before execution\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depends?: "
                },
                {
                  "kind": "Reference",
                  "text": "FlowDependency",
                  "canonicalReference": "flow-test-engine!FlowDependency:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "depends",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#description:member",
              "docComment": "/**\n * Description of what this suite tests\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#exports:member",
              "docComment": "/**\n * Variables to export to global scope\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exports?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exports",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#metadata:member",
              "docComment": "/**\n * Extended metadata for suite configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        priority?: string;\n        tags?: string[];\n        timeout?: number;\n        estimated_duration_ms?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#node_id:member",
              "docComment": "/**\n * Unique node identifier for this test suite\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "node_id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "node_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#steps:member",
              "docComment": "/**\n * Test steps to execute\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "steps: "
                },
                {
                  "kind": "Reference",
                  "text": "TestStep",
                  "canonicalReference": "flow-test-engine!TestStep:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "steps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#suite_name:member",
              "docComment": "/**\n * Name of the test suite\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suite_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suite_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "flow-test-engine!TestSuite#variables:member",
              "docComment": "/**\n * Variables available to all steps\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "variables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "flow-test-engine!VERSION:var",
          "docComment": "/**\n * Versão do package\n *\n * Versão atual do Flow Test Engine, seguindo semantic versioning.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "VERSION = "
            },
            {
              "kind": "Content",
              "text": "\"1.0.0\""
            }
          ],
          "fileUrlPath": "src/index.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "VERSION",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        }
      ]
    }
  ]
}
