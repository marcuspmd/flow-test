name: Deploy Documentation to GitHub Pages

on:
  workflow_run:
    workflows: ["API Tests"]
    types: [completed]
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    # Proceed only if test workflow succeeded (or non-workflow_run triggers)
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout repository (triggered by API Tests)
      if: ${{ github.event_name == 'workflow_run' }}
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.workflow_run.head_sha }}

    - name: Checkout repository
      if: ${{ github.event_name != 'workflow_run' }}
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Download test results artifact from API Tests (GitHub CLI)
      if: ${{ github.event_name == 'workflow_run' }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p results
        gh run download ${{ github.event.workflow_run.id }} \
          --repo "${{ github.repository }}" \
          --name "test-results-${{ github.event.workflow_run.id }}" \
          --dir results
        # Normalize folder structure to ensure results/latest.json exists at root
        if [ ! -f results/latest.json ] && [ -f results/results/latest.json ]; then
          mv results/results/* results/
          rmdir results/results || true
        fi
        test -f results/latest.json || { echo "latest.json not found in artifact"; ls -R; exit 1; }

    - name: Generate HTML report from latest results
      if: ${{ github.event_name == 'workflow_run' }}
      run: |
        npm run report:html
        mkdir -p docs/public/report
        cp results/latest.html docs/public/report/index.html

    - name: Generate documentation
      run: npm run docs

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload documentation artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'

  deploy:
    environment:
      name: "github-pages"
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
